#!/bin/bash
#
# bash completion file for pygmentize-addons


_executables(){
    echo -n "$PATH" | xargs -d: -I{} -- find -L {} -maxdepth 1 -type f -executable -printf '%P\n' 2>/dev/null | sort -u
}

_lexers(){
    [[ -z $_LEXERS ]] && _LEXERS=$(pygmentize -L lexers | awk '/^* / {sub("^* ", ""); gsub(",", ""); sub(":$", ""); print}' | paste -sd' ')
    echo "$_LEXERS"
}

_have pygshit && {

_pygshit(){
    local cur prev

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case $prev in
        --lexer)
            # cache lexers in namespace
            _lexers >/dev/null
            readarray -t COMPREPLY < <(compgen -W "$(_lexers)" -- "$cur" )
            return 0
            ;;
        -*x|--executable)
            readarray -t COMPREPLY < <(compgen -W "$(_executables)" -- "$cur" )
            return 0
            ;;
    esac

    if [[ $cur = -* ]]; then
        readarray -t COMPREPLY < <(compgen -W '--executable -f --force -h --help -l --less --lexer -x' -- "$cur")
    fi

}

complete -F _pygshit -o default pygshit

}

_have pygsparkle && {

_pygsparkle(){
    local cur prev

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case $prev in
        --lexer)
            # cache lexers in namespace
            _lexers >/dev/null
            readarray -t COMPREPLY < <(compgen -W "$(_lexers)" -- "$cur")
            return 0
            ;;
        -*x|--executable)
            readarray -t COMPREPLY < <(compgen -W "$(_executables)" -- "$cur")
            return 0
            ;;
    esac

    if [[ $cur = -* ]]; then
        readarray -t COMPREPLY < <(compgen -W '--executable -f --force --gui -h --help --lexer -x' -- "$cur")
    fi

}

complete -F _pygsparkle -o default pygsparkle

}
