#!/bin/bash
#
# bash completion file for pygmentize-addons


__pyg(){

    local cur prev script

    COMPREPLY=()

    script=${COMP_WORDS[0]}
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case $prev in
        --lexer)
            # cache lexers in global namespace
            if hash pygmentize &>/dev/null && [[ -z $__pyg_lexers ]]; then
                readarray -t __pyg_lexers < <(pygmentize -L lexers 2>/dev/null | awk '/^* .+:$/ {sub("^* ", ""); sub(":$", ""); gsub(", ", "\n"); print}')
            fi

            if (( ${#__pyg_lexers[@]} > 0 )); then
                readarray -t COMPREPLY < <(compgen -W "${__pyg_lexers[*]}" -- "$cur")
            fi

            return 0
            ;;
        -*x|--executable)
            readarray -t COMPREPLY < <(compgen -W "$(echo -n "$PATH" | xargs -d: -I{} -- find -L {} -maxdepth 1 -type f -executable -printf '%P\n' 2>/dev/null | sort -u)" -- "$cur")
            return 0
            ;;
    esac

    if [[ $cur = -* ]]; then
        options=(--executable -f --force -h --help --lexer -x)

        if [[ $script = pygshit ]]; then
            options+=(-l --less)
        elif [[ $script = pygsparkle ]]; then
            options+=(--gui)
        fi

        readarray -t COMPREPLY < <(compgen -W "${options[*]}" -- "$cur")
        return 0
    fi

}

hash pygshit &>/dev/null && complete -F __pyg -o default pygshit

hash pygsparkle &>/dev/null && complete -F __pyg -o default pygsparkle
