#!/bin/bash
#
# Display PNG images of syntax highlighted code


error(){
    echo "ERROR: $@" >&2
}

handle-image(){
    if (( $# == 0 )); then
        error "No image file was specified"
    elif [[ ! -f $1 ]]; then
        error "'$1' is not a file"
    elif [[ ! -r $1 ]]; then
        error "No read permissions for '$1'"
    elif [[ ! $1 =~ ^/tmp/ ]]; then
        error "'$1' is not in /tmp"
    elif [[ ! $1 =~ \.(bmp|gif|img|jpeg|jpg|png)$ ]]; then
        error "'$1' does not appear to be an image file"
    else
        ristretto "$1" &>/dev/null
        rm -f "$1"
        return 0
    fi

    return 1
}


if (( $# == 0 )); then
    error "Missing operand"
    echo "Try 'chmod --help' for more information." >&2
    exit 1
elif (( $# == 1 )) && [[ $1 =~ ^(-h|--help|help)$ ]]; then
    echo "Usage: ${0##*/} FILE..."
    echo "Display PNG images of syntax highlighted code"
    echo
    echo "  -x, --executable      display syntax of an executable on the system PATH"
    exit 0
fi

for arg in "$@"; do

    # parse options
    if [[ $arg =~ ^(-x|--executable)$ ]]; then
        option=executable
        continue
    fi

    if [[ $option = executable ]]; then
        target=$(type -P "$arg")
    else
        target=$arg
    fi

    # continue if file is non-empty and readable
    if [[ -s $target && -r $target ]]; then

        # determine file extension
        ext=$(awk -F. '/.\./ {print $NF}' <<<"$target")
        #ext=$(grep -oP '(?<=[^/\.]\.)[A-Za-z0-9]+$' <<<"$target")

        if [[ -z $ext ]]; then  # use the Bash lexer if target file does not have an extension
            lexer="-l bash"
        fi
        tempfile="/tmp/pygsparkle-${RANDOM}.png"
        pygmentize -f png $lexer -O font_name="DejaVu Sans Mono",font_size=14,image_pad=15,line_number_pad=15,line_pad=6,style=native -o "$tempfile" "$target"
        handle-image "$tempfile" &

    # verbose error handling
    else

        # error if argument is not a file or unreadable
        if [[ ! -f $target || ! -r $target ]]; then
            error "'$target' is not a valid target"
            continue
        # error if argument is an empty file
        elif [[ ! -s $target ]]; then
            error "'$target' appears to be empty"
            continue
        fi

    fi

done
