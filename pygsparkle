#!/bin/bash
#
# Display PNG images of syntax highlighted code


# program used to open PNG images (edit as necessary)
VIEWER=ristretto

error(){
    echo "ERROR: $*" >&2

    if [[ "${OPTIONS[@]}" = *gui* ]]; then
        ERRORS+=("$*")
    fi
}

error_simple(){
    echo "$*" >&2

    if [[ "${OPTIONS[@]}" = *gui* ]]; then
        ERRORS+=("$*")
    fi
}

exit(){
    if [[ "${OPTIONS[@]}" = *gui* && ${#ERRORS[@]} -gt 0 ]]; then
        zenity --error --text "$(printf '%s\n' "${ERRORS[@]}")" 2>/dev/null
    fi

    unset exit
    exit "${1:-0}"
}

handle-image(){
    if (( $# == 0 )); then
        error "No image file was specified"
    elif [[ ! -f $1 ]]; then
        error "'$1' is not a file"
    elif [[ ! -r $1 ]]; then
        error "No read permissions for '$1'"
    elif [[ ! $1 =~ ^/tmp/ ]]; then
        error "'$1' is not in /tmp"
    elif [[ ! $1 =~ \.(bmp|gif|img|jpeg|jpg|png)$ ]]; then
        error "'$1' does not appear to be an image file"
    else
        "$VIEWER" "$1" &>/dev/null
        rm -f "$1" &>/dev/null && return 0
    fi

    return 1
}

pygmentize(){
    "python${PYVER}" - "$@" <<-EOF

	import pygments.cmdline
	import signal
	import sys

	# ignore broken pipe
	signal.signal(signal.SIGPIPE, signal.SIG_DFL)

	try:
	    sys.exit(pygments.cmdline.main(sys.argv))
	except KeyboardInterrupt:
	    sys.exit(1)

	EOF
}

pygrunner(){

    local extension lexer mimetype target tempfile
    unset extension lexer mimetype target tempfile

    if [[ "${OPTIONS[@]}" = *executable* ]]; then
        target=$(type -P "$1")
        if [[ -z $target ]]; then
            error "Unable to find '$1' on PATH"
            return 1
        fi
    else
        target=$1
    fi

    mimetype=$(file --brief --dereference --mime-type "$target" 2>/dev/null)

    if [[ ! -e $target ]]; then
        error "'$target' does not exist"
        return 1
    elif [[ ! -f $target ]]; then
        error "'$target' is not a file"
        return 1
    elif [[ ! -r $target ]]; then
        error "'$target' is not readable"
        return 1
    elif [[ ! -s $target ]]; then
        error "'$target' is empty"
        return 1
    fi

    # verify that $target is a text file (unless --force is used)
    if [[ "${OPTIONS[@]}" != *force* && ! $mimetype =~ ^text/ ]]; then
        error "'$target' is not a text file (use '--force' to override)"
        return 1
    fi

    if [[ -n $LEXER ]]; then
        lexer="-l $LEXER"
    else
        # determine file extension
        extension=$(awk -F. '/.\./ {print $NF}' <<<"${target##*/}")

        # determine pygmentize lexer via mime type and/or extension
        if [[ $mimetype =~ ^text/(plain|x-shellscript)$ && -z $extension ]]; then
            lexer='bash'
        elif [[ $mimetype = 'text/x-perl' ]]; then
            lexer='perl'
        elif [[ $mimetype = 'text/x-python' || $extension =~ ^py[23]?$ ]]; then
            lexer='python'
        elif [[ $mimetype = 'application/xml' ]]; then
            lexer='xml'
        fi

        # add lexer option prefix (if necessary)
        [[ -n $lexer ]] && lexer="-l $lexer"
    fi

    tempfile="/tmp/pygsparkle-${RANDOM}.png"

    if pygmentize -f png $lexer -O 'font_name=DejaVu Sans Mono,font_size=14,image_pad=15,line_number_pad=15,line_pad=6,style=native' -o "$tempfile" "$target"; then
        handle-image "$tempfile" &
    fi

}

pyver(){
    # ensure python is installed
    hash "python${1}" &>/dev/null || return 1

    # ensure Pygments is installed
    "python${1}" - <<-EOF
	import sys

	try:
	    import pygments.cmdline
	    sys.exit(0)
	except ImportError:
	    pass

	sys.exit(1)
	EOF
}

usage(){
    cat <<-EOF
	Usage: $PROGRAM [OPTION]... FILE...
	Display PNG images of syntax highlighted code.

	  -f, --force           continue even if mime type of FILE is not text/plain
	  --gui                 display error messages via zenity
	  --lexer LEXER         indicate a lexer to use (default is to detect automatically)
	  -x, --executable      display syntax of an executable on the system PATH
	EOF
    exit 0
}


PROGRAM=${0##*/}
params=$(getopt -o 'h,x' -l 'executable,help,gui,lexer:' -n "$PROGRAM" -- "$@") || exit 1

eval set -- "$params"

OPTIONS=()
LEXER=
PYVER=

while true; do
    case "$1" in
        -f|--force)
            OPTIONS+=('force')
            shift
            ;;
        --gui)
            OPTIONS+=('gui')
            shift
            ;;
        -h|--help)
            usage
            ;;
        --lexer)
            shift
            LEXER=$1
            if [[ -z $LEXER ]]; then
                error "Please indicate a lexer to use"
                exit 1
            fi
            shift
            ;;
        -x|--executable)
            OPTIONS+=('executable')
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

if (( $# == 0 )); then
    error_simple "$PROGRAM: missing operand"
    error_simple "Try '$PROGRAM --help' for more information."
    exit 1
fi

if pyver 2; then
    PYVER=2
elif pyver 3; then
    PYVER=3
else
    error "Pygments does not appear to be installed"
    exit 1
fi

for file in "$@"; do
    pygrunner "$file"
done

exit "$?"
