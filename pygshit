#!/bin/bash
#
# Display a syntax highlighted code


error(){
    echo "ERROR: $@" >&2
}

usage(){
    echo "Usage: $PROGRAM [OPTION] FILE"
    echo "Display syntax highlighted code"
    echo
    echo "  -l, --less            use less to display command output"
    echo "  -x, --executable      display syntax of an executable on the system PATH"
    exit 0
}


shopts='h,l,x'
lopts='executable,help,less'
PROGRAM=${0##*/}

params=$(getopt -o "$shopts" -l "$lopts" -n "$PROGRAM" -- "$@") || exit 1

eval set -- "$params"

for argument in "$@"; do
    if (( last_option == 1 )); then
        files+=("$argument")
    else
        case $argument in
            -h|--help)
                usage
                ;;
            -l|--less)
                options+=('less')
                ;;
            -x|--executable)
                options+=('executable')
                ;;
            --)
                last_option=1
                ;;
            *)
                files+=("$argument")
                ;;
        esac
    fi
done

if (( ${#files[@]} == 0 )); then
    echo "$PROGRAM: missing operand" >&2
    echo "Try '$PROGRAM --help' for more information." >&2
    exit 1
elif (( ${#files[@]} > 1 )); then
    error "More than one target supplied"
    exit 1
fi

file=${files[0]}

if [[ ${options[@]} = *executable* ]]; then
    # set target to the full path of script
    target=$(type -P "$file")
else
    target=$file
fi

mimetype=$(file --brief --dereference --mime-type "$target" 2>/dev/null)

if [[ -z $target ]]; then
    error "'$file' is not a valid target"
    exit 1
elif [[ ! -f $target ]]; then
    error "'$target' does not exist"
    exit 1
elif [[ ! -r $target ]]; then
    error "'$target' is not readable"
    exit 1
elif [[ ! -s $target ]]; then
    error "'$target' is empty"
    exit 1
elif [[ ! $mimetype =~ ^text/ ]]; then
    error "'$target' is not a text file"
    exit 1
fi

# determine file extension
ext=$(awk -F. '/.\./ {print $NF}' <<<"${target##*/}")

# use bash lexer if target file does not have an extension
if [[ -z $ext || $mimetype =~ ^text/(plain|x-shellscript)$ ]]; then
    lexer='-l bash'
elif [[ $ext =~ ^py[23]$ || $mimetype = 'text/x-python' ]]; then
    lexer='-l python'
fi

comm='pygmentize -f 256 $lexer -O style=native "$target" 2>/dev/null'

if [[ ${options[@]} = *less* ]]; then
    eval "$comm" | less -R
else
    eval "$comm"
fi
