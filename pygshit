#!/bin/bash
#
# Display a syntax highlighted code


error(){
    echo "ERROR: $*" >&2
}

haveopt(){
    for option in "${OPTIONS[@]}"; do
        [[ $option = "$1" ]] && return 0
    done
    return 1
}

pygmentize(){
    "python${PYVER}" - "$@" <<-EOF

	import pygments.cmdline
	import signal
	import sys

	# ignore broken pipe
	signal.signal(signal.SIGPIPE, signal.SIG_DFL)

	try:
	    sys.exit(pygments.cmdline.main(sys.argv))
	except KeyboardInterrupt:
	    sys.exit(1)

	EOF
}

pygrunner(){

    local cmd extension lexer mimetype target
    unset cmd extension lexer mimetype target

    if haveopt 'executable'; then
        # set target to the full path of script
        target=$(type -P "$1")
        if [[ -z $target ]]; then
            error "Unable to find '$1' on PATH"
            return 1
        fi
    elif [[ $1 = - ]]; then
        target=$(mktemp)
        GARBAGE+=("$target")
        trap 'rm "${GARBAGE[@]}"' EXIT
        cat < /dev/stdin > "$target"
    elif [[ $1 = /dev/fd/* ]]; then
        target=$(mktemp)
        GARBAGE+=("$target")
        trap 'rm "${GARBAGE[@]}"' EXIT
        cat < "$1" > "$target"
    else
        target=$1
    fi

    # determine file type
    mimetype=$(file --brief --dereference --mime-type "$target" 2>/dev/null)

    if [[ ! -e $target ]]; then
        error "'$target' does not exist"
        return 1
    elif [[ ! -f $target ]]; then
        error "'$target' is not a file"
        return 1
    elif [[ ! -r $target ]]; then
        error "'$target' is not readable"
        return 1
    elif [[ ! -s $target ]]; then
        error "'$target' is empty"
        return 1
    fi

    # verify that $target is a text file (unless --force is used)
    if [[ ! $mimetype =~ ^text/ ]] && ! haveopt 'force'; then
        error "'$target' is not a text file (use '--force' to override)"
        return 1
    fi

    opts='-O style=native'

    if [[ -n $LEXER ]]; then
        lexer="-l $LEXER"
    else
        # determine file extension
        extension=$(awk -F. '/.\./ {print $NF}' <<<"${target##*/}")

        # determine pygmentize lexer via mime type and/or extension
        if [[ $mimetype =~ ^text/(plain|x-shellscript)$ ]]; then
            lexer='bash'
        elif [[ $mimetype = 'text/x-diff' ]]; then
            lexer='diff'
            opts=''
        elif [[ $mimetype = 'text/x-perl' ]]; then
            lexer='perl'
        elif [[ $mimetype = 'text/x-python' || $extension =~ ^py[23]?$ ]]; then
            lexer='python'
        elif [[ $mimetype = 'application/xml' ]]; then
            lexer='xml'
        fi

        # add lexer option prefix (if necessary)
        [[ -n $lexer ]] && lexer="-l $lexer"
    fi

    output=$(pygmentize -f 256 $lexer $opts "$target")
    ec=$?

    if (( ec != 0 )); then
        return $?
    elif [[ -z $output ]]; then
        return 1
    fi

    # execute the pygmentize command
    if haveopt 'less'; then
        echo "$output" | less -R
    else
        echo "$output"
    fi

}

pyver(){
    # ensure python is installed
    hash "python${1}" &>/dev/null || return 1

    # ensure Pygments is installed
    "python${1}" - <<-EOF
	import sys

	try:
	    import pygments.cmdline
	    sys.exit(0)
	except ImportError:
	    pass

	sys.exit(1)
	EOF
}

usage(){
    cat <<-EOF
	Usage: $PROGRAM [OPTION]... FILE...
	Display syntax highlighted code.

	  -f, --force           continue even if mime type of FILE is not text/*
	  -l, --less            use less to display command output
	  --lexer LEXER         indicate a lexer to use (default is to detect automatically)
	  -x, --executable      display syntax of an executable on the system PATH
	EOF
    exit 0
}


shopts='f,h,l,x'
lopts='executable,force,help,less,lexer:'
PROGRAM=${0##*/}

params=$(getopt -o "$shopts" -l "$lopts" -n "$PROGRAM" -- "$@") || exit 1

eval set -- "$params"

OPTIONS=()
LEXER=
PYVER=

while true; do
    case "$1" in
        -f|--force)
            OPTIONS+=('force')
            shift
            ;;
        -h|--help)
            usage
            ;;
        -l|--less)
            OPTIONS+=('less')
            shift
            ;;
        --lexer)
            shift
            LEXER=$1
            if [[ -z $LEXER || $LEXER = -* ]]; then
                error "Please indicate a lexer to use"
                exit 1
            fi
            shift
            ;;
        -x|--executable)
            OPTIONS+=('executable')
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

if (( $# == 0 )); then
    echo "$PROGRAM: missing operand" >&2
    echo "Try '$PROGRAM --help' for more information." >&2
    exit 1
fi

if pyver 2; then
    PYVER=2
elif pyver 3; then
    PYVER=3
else
    error "Pygments does not appear to be installed"
    exit 1
fi

for file in "$@"; do
    pygrunner "$file"
done
