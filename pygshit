#!/bin/bash
#
# Display a syntax highlighted code


error(){
    echo "ERROR: $@" >&2
}

usage(){
    echo "Usage: ${0##*/} [OPTION] FILE"
    echo "Display syntax highlighted code"
    echo
    echo "  -l, --less            use less to display command output"
    echo "  -x, --executable      display syntax of an executable on the system PATH"
    exit 0
}


shopts='h,l,x'
lopts='executable,help,less'

parameters=$(getopt -o "$shopts" -l "$lopts" -n "${0##*/}" -- $@)

if (( $? != 0 )); then
    exit 1
fi

eval set -- "$parameters"

for argument in "$@"; do
    if (( last_option == 1 )); then
        files+=("$argument")
    else
        case $argument in
            -h|--help)
                usage
                ;;
            -l|--less)
                options+=("less")
                ;;
            -x|--executable)
                options+=("executable")
                ;;
            --)
                last_option=1
                ;;
            *)
                files+=("$argument")
                ;;
        esac
    fi
done

if (( ${#files[@]} == 0 )); then
    error "Missing operand"
    echo "Try 'chmod --help' for more information." >&2
    exit 1
elif (( ${#files[@]} > 1 )); then
    error "More than one target supplied"
    exit 1
fi

if [[ ${options[@]} = *executable* ]]; then
    # set target to the full path of script
    target=$(type -P "${files[0]}")
else
    target=${files[0]}
fi

if [[ -z $target ]]; then
    error "'${files[0]}' is not a valid target"
    exit 1
elif [[ ! -f $target ]]; then
    error "'$target' does not exist"
    exit 1
fi

if [[ -s $target && -r $target ]]; then
    [[ -z ${arg##*.} ]] && lexer='-l bash'
    comm='pygmentize -f 256 $lexer -O style=native "$target"'
    if [[ ${options[@]} = *less* ]]; then
        eval "$comm" | less -R
    else
        eval "$comm"
    fi
fi
